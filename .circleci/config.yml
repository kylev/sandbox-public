version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19
  aws-s3: circleci/aws-s3@1.0.12
  docker: circleci/docker@0.5.20

jobs:
  rubyapp_test:
    docker:
      - image: circleci/ruby:2.6.5
    steps:
      - checkout
      - restore_cache:
          key: sandbox-rubyapp-{{ checksum "rubyapp/Gemfile.lock" }}
      - run:
          name: Test
          command: |
            cd rubyapp
            bundle check --path vendor/bundle || bundle install --path vendor/bundle

            mkdir -p ~/results
            bundle exec rspec --format progress --format RspecJunitFormatter -o ~/results/rspec.xml
      - save_cache:
          key: sandbox-rubyapp-{{ checksum "rubyapp/Gemfile.lock" }}
          paths:
            - rubyapp/vendor/bundle
      - store_test_results:
          path: ~/results

  opsbot_test:
    docker:
      - image: circleci/python:3.8.0
    steps:
      - checkout
      - restore_cache:
          key: sandbox-opsbot-{{ checksum "opsbot/requirements.txt" }}-{{ checksum "opsbot/setup.py" }}
      - run:
          name: nosetests
          command: |
            cd opsbot
            pip install --user -r requirements.txt
            pip install --user -e .

            mkdir -p ~/results/nose
            nosetests --with-xunit --xunit-file ~/results/nose.xml
      - save_cache:
          key: sandbox-opsbot-{{ checksum "opsbot/requirements.txt" }}-{{ checksum "opsbot/setup.py" }}
          paths:
            - ~/.cache/pip
            - ~/.local
      - store_test_results:
          path: ~/results

  rubyapp_package:
    docker:
      - image: circleci/python:3
    steps:
      - setup_remote_docker
      - checkout
      - docker/build:
          image: kylev/sandbox-rubyapp
          path: rubyapp

  opsbot_package:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - restore_cache:
          key: sandbox-opsbot-package-{{ checksum "opsbot/requirements.txt" }}-{{ checksum "opsbot/setup.py" }}
      - run:
          name: Zip for Lambda
          command: |
            cd opsbot
            make package
      - save_cache:
          key: sandbox-opsbot-package-{{ checksum "opsbot/requirements.txt" }}-{{ checksum "opsbot/setup.py" }}
          paths:
            - opsbot/.package
      - run:
          name: Examine
          command: unzip -l ~/lambda.zip
      - aws-s3/copy:
          from: ~/lambda.zip
          to: s3://kylev-utility/opsbot/lambda-${CIRCLE_SHA1}.zip

  opsbot_cd:
    docker:
      - image: circleci/python:3
    steps:
      - aws-cli/install
      - aws-cli/setup
      - run:
          name: Deploy
          command: |
            aws lambda update-function-code --function-name opsbot_lambda --publish --s3-bucket kylev-utility --s3-key opsbot/lambda-${CIRCLE_SHA1}.zip

workflows:
  version: 2
  ci:
    jobs:
      - rubyapp_test
      - opsbot_test
      - rubyapp_package
      - opsbot_package
      - opsbot_cd:
          filters:
            branches:
              only:
                - master
                - /^kv_/
          requires:
            - opsbot_test
            - opsbot_package
